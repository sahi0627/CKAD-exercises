GIT CMDS:

Kavalipurapu Sahithi@sahithi MINGW64 ~
$ mkdir newtestrepo

Kavalipurapu Sahithi@sahithi MINGW64 ~
$ cd newtestrepo

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo
$ git init
Initialized empty Git repository in C:/Users/Kavalipurapu Sahithi/newtestrepo/.git/

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo (master)
$ ls -al
total 20
drwxr-xr-x 1 Kavalipurapu Sahithi 197121 0 Apr 17 10:20 ./
drwxr-xr-x 1 Kavalipurapu Sahithi 197121 0 Apr 17 10:19 ../
drwxr-xr-x 1 Kavalipurapu Sahithi 197121 0 Apr 17 10:20 .git/

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo (master)
$ ^C

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo (master)
$ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo (master)
$

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo (master)
$ git add testfile
fatal: pathspec 'testfile' did not match any files

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo (master)
$ ls

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo (master)
$ touch sahifile testfile

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo (master)
$ ls
sahifile  testfile

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo (master)
$ git clone https://github.com/sahi0627/CKAD-exercises.git
Cloning into 'CKAD-exercises'...
remote: Enumerating objects: 697, done.
remote: Total 697 (delta 0), reused 0 (delta 0), pack-reused 697
Receiving objects: 100% (697/697), 227.32 KiB | 7.10 MiB/s, done.
Resolving deltas: 100% (429/429), done.

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo (master)
$ git add sahifile testfile

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo (master)
$ ls
CKAD-exercises/  sahifile  testfile

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   sahifile
        new file:   testfile

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        CKAD-exercises/


Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo (master)
$ cd CKAD-exercises/

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ touch test1 test2

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ git add test1 test2

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ ls
CODE_OF_CONDUCT.md  README.md           b.multi_container_pods.md  d.configuration.md  f.services.md  h.helm.md  j.podman.md  test2
LICENSE             a.core_concepts.md  c.pod_design.md            e.observability.md  g.state.md     i.crd.md   test1

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   test1
        new file:   test2


Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ git commit -m "This is my first commit with test1 and 2 files"
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'Kavalipurapu Sahithi@sahithi.(none)')

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ git remote add origin https://github.com/sahi0627/CKAD-exercises.git
error: remote origin already exists.

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ git statua
git: 'statua' is not a git command. See 'git --help'.

The most similar command is
        status

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   test1
        new file:   test2


Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ git config --global user.email "kavalipurapu.sahithi@herovired.com"

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ git config --global user.name "sahi0627"

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ git commit -m "This is my first commit with test1 and 2 files"
[main 45fc248] This is my first commit with test1 and 2 files
 2 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 test1
 create mode 100644 test2

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ git push origin main
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 305 bytes | 76.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/sahi0627/CKAD-exercises.git
   a413e82..45fc248  main -> main

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ git branch newtestbranch

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ git checkout
Your branch is up to date with 'origin/main'.

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (main)
$ git checkout newtestbranch
Switched to branch 'newtestbranch'

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (newtestbranch)
$ ls
CODE_OF_CONDUCT.md  README.md           b.multi_container_pods.md  d.configuration.md  f.services.md  h.helm.md  j.podman.md  test2
LICENSE             a.core_concepts.md  c.pod_design.md            e.observability.md  g.state.md     i.crd.md   test1

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (newtestbranch)
$ git add newtestfile1 newtestfile2
fatal: pathspec 'newtestfile1' did not match any files

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (newtestbranch)
$ touch newtestfile1 newtestfile2

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (newtestbranch)
$ git status
On branch newtestbranch
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        newtestfile1
        newtestfile2

nothing added to commit but untracked files present (use "git add" to track)

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (newtestbranch)
$ ^[[200~git commit -m "This is my first commit with test1 and 2 files"
bash: $'\E[200~git': command not found

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (newtestbranch)
$ git commit -m "This is my seconf commit with new branch files"
On branch newtestbranch
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        newtestfile1
        newtestfile2

nothing added to commit but untracked files present (use "git add" to track)

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (newtestbranch)
$ git add newtestfile1 newtestfile2

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (newtestbranch)
$ git status
On branch newtestbranch
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   newtestfile1
        new file:   newtestfile2


Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (newtestbranch)
$ git commit -m "This is my second commit with new branch files"
[newtestbranch bd84831] This is my second commit with new branch files
 2 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 newtestfile1
 create mode 100644 newtestfile2

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (newtestbranch)
$ git status
On branch newtestbranch
nothing to commit, working tree clean

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (newtestbranch)
$ git log
commit bd84831b307da48e8c2d65495133049df1a359ba (HEAD -> newtestbranch)
Author: sahi0627 <kavalipurapu.sahithi@herovired.com>
Date:   Mon Apr 17 11:06:20 2023 +0530

    This is my second commit with new branch files

commit 45fc248b4d4bbca37a96150857fbdd1ac1276329 (origin/main, origin/HEAD, main)
Author: sahi0627 <kavalipurapu.sahithi@herovired.com>
Date:   Mon Apr 17 10:52:12 2023 +0530

    This is my first commit with test1 and 2 files

commit a413e8232380e5b4046a67d310491c17bdb61c53
Author: seancrasto <103709488+seancrasto@users.noreply.github.com>
Date:   Mon Apr 3 17:47:27 2023 -0400

    Update g.state.md (#311)

    Cleanup pvc and pv as well

    Co-authored-by: Dimitris-Ilias Gkanatsios <dgkanatsios@outlook.com>

commit 52b90a491304ed6abdf717b63890d3095394db59
Author: Wu Jiayi <wujiayi.chris@gmail.com>
Date:   Tue Apr 4 05:46:08 2023 +0800

    Update g.state.md (#317)

commit 3475f7b12846d3ab70ed42b4c67119046851062a
Author: saroj4321 <saroj4321@gmail.com>
Date:   Tue Apr 4 03:15:48 2023 +0530

    Create a job from Cronjob (#318)

    * Update info about allowed resources

    As of June 2022, personal browser bookmarks are not allowed anymore.
    The browser within the exam environment must be used to access the K8s docs.

    * Create Job From CronJob

    March 2023 exam had this question to create a job from cronjob

    ---------

    Co-authored-by: MaxAtoms <7847075+MaxAtoms@users.noreply.github.com>

:


Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (newtestbranch)
$

Kavalipurapu Sahithi@sahithi MINGW64 ~/newtestrepo/CKAD-exercises (newtestbranch)
$ git push origin newtestbranch


touch cmd to add new files

click on fork to add anyone's repo to your repo.